import time
import RPi.GPIO as GPIO

# import Adafruit_DHT
# GPIO setup
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
# DHT_SENSOR = Adafruit_DHT.DHT11
# DHT_PIN = 4  # GPIO pin number

LED1 = 5
LED2 = 6
LED3 = 7

GPIO.setup(LED1, GPIO.OUT)
GPIO.setup(LED2, GPIO.OUT)
GPIO.setup(LED3, GPIO.OUT)


# Simulating sensor data (since Proteus handles the sensor internally)
def read_simulated_dht11():
    # Simulate temperature and humidity values
    simulated_temperature = 15  # Example temperature value
    simulated_humidity = 60  # Example humidity value
    return simulated_humidity, simulated_temperature


while True:
    # Simulate reading from the sensor
    humidity, temperature = read_simulated_dht11()
    # humidity, temperature = Adafruit_DHT.read(DHT_SENSOR, DHT_PIN)  # Uncomment if using real sensor

    if humidity is not None and temperature is not None:
        print(f"Temp={temperature:0.1f}C  Humidity={humidity:0.1f}%")

        # Using if-else to check temperature ranges
        if temperature < 18:
            print("It's cold, you might want a jacket.")
            GPIO.output(LED1, GPIO.HIGH)
            GPIO.output(LED2, GPIO.LOW)
            GPIO.output(LED3, GPIO.LOW)
        elif 18 <= temperature < 25:
            print("The temperature is comfortable.")
            GPIO.output(LED1, GPIO.LOW)
            GPIO.output(LED2, GPIO.HIGH)
            GPIO.output(LED3, GPIO.LOW)
        else:
            print("It's warm, stay hydrated!")
            GPIO.output(LED1, GPIO.LOW)
            GPIO.output(LED2, GPIO.LOW)
            GPIO.output(LED3, GPIO.HIGH)

    else:
        print("Failed to retrieve data from sensor")

    # Wait for 5 seconds before the next simulated reading
    time.sleep(5)
